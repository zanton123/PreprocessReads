For building the executables from source use the following command line in Linux:

gcc -std=c++11 -pthread -O2 -o PreprocessReads_CPU_multithreaded PreprocessReads_CPU_multithreaded.cpp -lz -lstdc++

gcc -std=c++11 -O2 -o PreprocessReads_CPU PreprocessReads_CPU.cpp -lz -lstdc++

nvcc -O2 -gencode arch=compute_30,code=sm_30 -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=sm_50 \
-gencode arch=compute_52,code=sm_52 -gencode arch=compute_60,code=sm60 -gencode arch=compute_70,code=sm_70 \
-o PreprocessReads PreprocessReads.cu -lz

Code Blocks Users:

The CPU versions of PreprocessReads can also be built using Code Blocks MinGW in Windows (tested for Windows 10).
If you are building in Windows using Code Blocks uncomment the #define __CODEBLOCKS__ in PreprocessReads_CPU.cpp and PreprocessReads_CPU_multithreaded.cpp
You will need to install zlib into your Code Blocks lib and include folders from the respective version zip file. Also the zlib.dll from the bin package will be required.
Either move zlib.dll into a folder that is referenced in the PATH or into the current folder where the program will run.
